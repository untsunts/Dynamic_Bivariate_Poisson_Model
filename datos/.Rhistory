paret_1<-mapply(FUN = pareto, df1$unif,sort(alfa), SIMPLIFY='array')
```
Para observar mejor lo que está pasando, veamos las siguientes gráficas:
**Gráficas**
```{r, echo=FALSE}
dfp<-data.frame(x = paret_1, alfa = as.factor(order(alfa)))
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_histogram() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000)
ggplot(dfp, aes(x)) + geom_density() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000)
ggplot(dfp, aes(x)) + geom_histogram() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000) + facet_wrap(~alfa)
pareto<-function(x,alfa){
p = (1-x)^(-(1/alfa))
p
}
unif_p <- runif(10000,0,1)
alfa<-rep( seq(0.1,1,0.1), 1000)
df1<- data.frame( alfa =as.factor(sort(alfa)), unif=unif_p)
View(df1)
df1<-df1[order(df1),]
paret_1<-mapply(FUN = pareto, df1$unif,sort(alfa), SIMPLIFY='array')
dfp<-data.frame(x = paret_1, alfa = as.factor(order(alfa)))
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
View(dfp)
set.seed(125089)
pareto<-function(x,alfa){
p = (1-x)^(-(1/alfa))
p
}
cauchy <- function(x){
}
unif_p <- runif(10000,0,1)
alfa<-rep( seq(0.1,1,0.1), 1000)
df1<- data.frame( alfa =as.factor(alda[sort(alfa)]), unif=unif_p)
df1<- data.frame( alfa =as.factor(alfa[sort(alfa)]), unif=unif_p)
df1<-df1[order(df1),]
df1<- data.frame( alfa =as.factor(alfa[sort(alfa)]), unif=unif_p)
df1<-df1[order(df1),]
df1<- data.frame( alfa =as.factor(alfa[sort(alfa)]), unif=unif_p)
View(df1)
paret_1<-mapply(FUN = pareto, df1$unif,sort(alfa), SIMPLIFY='array')
dfp<-data.frame(x = paret_1, alfa = as.factor(order(alfa)))
ggplot(dfp, aes(x), colour=alfa) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
alfa[sort(alfa)]
as.factor(alfa[sort(alfa)])
df1<- data.frame( alfa =as.factor(alfa[sort(alfa)]), unif=unif_p)
paret_1<-mapply(FUN = pareto, df1$unif,sort(alfa), SIMPLIFY='array')
dfp<-data.frame(x = paret_1, alfa = as.factor(alfa[order(alfa)]))
ggplot(dfp, aes(x), colour=alfa) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,100000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 5) +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_density() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000)
ggplot(dfp, aes(x)) + geom_density() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,100000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_density() +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
ggplot(dfp, aes(x), fill='blue') + geom_histogram(binwidth = 5) +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 5) +
ggtitle("Pareto (alfa=1, xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 5) +
ggtitle("Pareto (xm=1)") + xlim(0,10000)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 100) +
ggtitle("Pareto (xm=1)") + xlim(0,10000)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 1000) +
ggtitle("Pareto (xm=1)") + xlim(0,10000)
ggplot(dfp, aes(x)) + geom_histogram(binwidth = 1000) +
ggtitle("Pareto (xm=1)") + xlim(0,100000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_density() +
ggtitle("Pareto (xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_boxplot()
qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 0.5)
qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1)
qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1) + xlim(0,1000)
qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1) + ylim(0,1000)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,10000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x), colour = 'darblue') + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,10000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x), colour = 'darkblue') + stat_ecdf(geom = "step") +
ggtitle("Pareto (xm=1)") + xlim(0,10000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step", colour = 'darkblue') +
ggtitle("Pareto (xm=1)") + xlim(0,10000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step", colour = 'darkred') +
ggtitle("Pareto (xm=1)") + xlim(0,10000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + stat_ecdf(geom = "step", colour = 'darkred') +
ggtitle("Pareto (xm=1)") + xlim(0,1000)+ facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_density(fill='darblue') +
ggtitle("Pareto (xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
ggplot(dfp, aes(x)) + geom_density(fill='darkblue') +
ggtitle("Pareto (xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1) + ylim(0,1000)
gF<-ggplot(dfp, aes(x)) + stat_ecdf(geom = "step", colour = 'darkred') +
ggtitle("Pareto (xm=1)") + xlim(0,1000)+ facet_wrap(~alfa)
ghist<-ggplot(dfp, aes(x)) + geom_density(fill='darkblue') +
ggtitle("Pareto (xm=1)") + xlim(0,10000) + facet_wrap(~alfa)
gbp<-qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1) + ylim(0,1000)
library(gridExtra)
grid.arrange(gF,ghist,gbp,ncol=2)
gbp2<-qplot(factor(alfa), x, data = dfp, geom = "boxplot") +
coord_flip() + geom_boxplot(aes(fill = alfa, alpha=0.4),outlier.size = 1) + ylim(0,10000)
grid.arrange(gF,ghist,gbp,gbp2,ncol=2)
grid.arrange(gF,gbp,ghist,gbp2,ncol=2)
grid.arrange(gF,gbp2,ghist,gbp,ncol=2)
grid.arrange(gF,gbp2,ghist,gbp,ncol=2) + geom_title('Distribucion Pareto')
?grid.arrange
?summarise
summarise(mtcars, mean(disp))
summarise(group_by(mtcars, cyl), mean(disp))
summarise(group_by(dfp, alfa), max(x))
summarise(group_by(dfp, alfa), max(x), min(x))
summarise(group_by(dfp, alfa), fivenum(x))
summarise(group_by(dfp, alfa), min(x), median(x), max(x), mean(x))
summarise(group_by(dfp, alfa), min(x), median(x), max(x), log(mean(x)))
summarise(group_by(dfp, alfa), min(x), median(x), log(max(x)), log(mean(x)))
n<- 50
set.seed(7201058)
x<-rpois(n, lambda=5)
x
x_barra<-mean(x)
x_barra
s<- sd(x)
ee<-s/sqrt(n)
ee
reps_bootstrap <- lapply(1:5000, function(i){
sample(x, n, replace = T)
})
reps_bootstrap[1:10]
reps_media<-sapply(reps_bootstrap, mean)
reps_media[1:10]
qplot(reps_media, binwidth=0.1)
hist(reps_media, binwidth=0.1)
sd(reps_media)
sd(reps_media)
s/sqrt(n)
sqrt((n-1)/n)*s/sqrt(n)
?mtcars
dat <- mtcars %>% select(mpg, hp)
library(maggritr)
library(magritr)
library(magrittr)
dat <- mtcars %>% select(mpg, hp)
library(dplyr)
dat <- mtcars %>% select(mpg, hp)
cor(dat)
reps_boot <- lapply(1:500, function(i){
dat[sample(1:nrow(dat), nrow(dat), replace = T), ]
})
reps_boot[1:2]
reps_corr <- sapply(reps_boot, function(datos){ cor(datos)[1,2] })
reps_corr[1:10]
hist(reps_corr)
sd(reps_boot)
sd(reps_corr)
.libPaths
.libPaths()
library(dplyr)
library(tidyr)
library(ggplot2)
library(ElemStatLearn)
library(tsne)
install.packages(tsne)
install.packages("tsne")
library(tsne)
library(DiagrammeR)
install.packages("DiagrammeR")
library(randomForest)
library(kknn)
library(ggplot2)
library(dplyr)
library(tidyr)
library(kknn)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plyr)
library(dplyr)
library(tidyr)
library(glmnet)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(arm)
library(kknn)
library(readr)
library(stringi)
library(caret)
library(e1071)
library(shiny)
library(rmarkdown)
install.packages("shiny")
install.packages("shiny")
update.packages(checkBuilt=TRUE)
version
packageStatus()
library(shiny)
library(rmarkdown)
version
library(caret)
library(arm)
library(dplyr)
library(tidyr)
library(ElemStatLearn)
library(glmnet)
library(readr)
library(e1071)
library(ROCR)
install.packages("ROCR")
library(e1071)
library(rpart)
library(rpart.plot)
installed.packages()
library(rpart.plot)
install.packages("rpart.plot")
library(ROCR)
library(ggplot2)
library(dplyr)
library(rpart)
library(rpart.plot)
library(ElemStatLearn)
library(randomForest)
library(scales)
library(splines)
library(rfPermute)
install.packages("rfPermute")
library(gbm)
install.packages("gbm")
library(maptools)
library(map)
install.packages(c("maptools","map"))
library(maps)
install.packages("maps")
library(neuralnet)
library(RSNNS)
install.packages(c("RSNNS","neuralnet")
)
library(neuralnet)
library(kernlab)
library(caret)
library(caret)
library(e1071)
library(ggplot2)
library(doMC)
install.packages("doMC")
library(stringr)
library(compiler)
library(reshape2)
library(Matrix)
installed.packages()
version
packageStatus()
library(lubridate)
.libPaths()
.libPaths()
installed.packages("rgdal")
install.packages("rgdal")
.libPaths()
?rbin
?rbinom
set.seed(1)
x1<-rbinom(1,1,0.35)
x5<-rbinom(1,5,0.35)
x10<-rbinom(1,10,0.35)
x20<-rbinom(1,20,0.35)
x30<-rbinom(1,30,0.35)
x50<-rbinom(1,50,0.35)
View(x1)
hist(x1)
hist(x4)
hist(x5)
?sum
plot(sum(x5))
x5
x5<-rbinom(5,1,0.35)
x5
set.seed(1)
x1<-rbinom(1,1,0.35)
x5<-rbinom(5,1,0.35)
x10<-rbinom(10,1,0.35)
x20<-rbinom(20,1,0.35)
x30<-rbinom(30,1,0.35)
x50<-rbinom(50,1,0.35)
x1
x5
x10
x20
x30
x50
sum(x5)
sum(x10)
sum(20)
sum(x20)
sum(x30)
sum(x50)
?rbinom
x1<-rbinom(100,1,0.35)
x1<-rbinom(1000,1,0.35)
x1<-rbinom(1,1000,0.35)
x5<-rbinom(5,1000,0.35)
x10<-rbinom(10,1000,0.35)
x20<-rbinom(20,1000,0.35)
x30<-rbinom(30,1000,0.35)
x50<-rbinom(50,1000,0.35)
hist(x1)
hist(x5)
hist(x10)
hist(x20)
hist(x50)
hist(rbinom(1000,1000,0.35))
?rnorm
hist(rnorm(100000,0.35,sqrt(0.35*1000*0.65)))
DifM<-c(21,20,41,-6,-3,20,-2,7,1,21,31,16,28,-4,-3,-9,19)
?sd
sd(DifM)
library(tidyverse)
library(readr)
say "Paisa"
library(rvest)
url<-'https://seekingalpha.com/market-news'
webpage<- read_html(url)
url<-"http://jupyter.readthedocs.io/en/latest/running.html#running"
webpage<- read_html(url)
url<-"http://seekingalpha.com/market-news"
webpage<- read_html(url)
url<-"https://seekingalpha.com/market-news"
webpage<- read_html(url)
titles_html <- html_nodes(webpage, ".add-source-assigned")
install.packages("xml2")
install.packages("xml2")
library(xml2)
library(rvest)
webpage<- read_html(url)
titles_html <- html_nodes(webpage, ".add-source-assigned")
install.packages("XML")
library(XML)
library(rvest)
webpage<- read_html(url)
titles_html <- html_nodes(webpage, ".add-source-assigned")
html_text(titles_html)
library(stringr)
str_count(html_text(titles_html),"Facebook")
str_count(html_text(titles_html),"Trump")
str_count(html_text(titles_html),"Hughes")
str_count(html_text(titles_html),"the")
str_count(html_text(titles_html),"Amazon")
sum(str_count(html_text(titles_html),"Amazon"))
sum(str_count(html_text(titles_html),"the"))
sum(str_count(html_text(titles_html),"a"))
sum(str_count(html_text(titles_html),"Paretum"))
sum(str_count(html_text(titles_html),"Goldman"))
sum(str_count(html_text(titles_html),"Gold"))
rm(list = ls())
library(tidyverse)
library(magrittr)
###### lectura bases de datos con resultados de partidos -----
setwd("Desktop/ITAM/Tesis/")
dir()
ls
ls()
library(data.table)
juegos_premier <- read_csv("datos/premier_93-94.csv")
juegos_premier
juegos_premier %>% glimpse()
dir()
###### lectura bases de datos con resultados de partidos -----
setwd("Desktop/ITAM/Tesis/datos")
setwd("datos")
dir()
nombres_dir <- dir()
library(stringr)
nombres_dir %>% str_detect(pattern = "premier_")
nombres_dir[nombres_dir %>% str_detect(pattern = "premier_")]
nombres_premier <- nombres_dir[nombres_dir %>% str_detect(pattern = "premier_")]
nombres_premier
rm(list = ls())
library(tidyverse)
library(magrittr)
library(data.table)
library(stringr)
###### lectura bases de datos con resultados de partidos -----
setwd("Desktop/ITAM/Tesis/")
setwd("datos")
nombres_dir <- dir()
nombres_premier <- nombres_dir[nombres_dir %>% str_detect(pattern = "premier_")]
i <- 1
nombres_premier[i]
read_csv(nombres_premier[i])
library(lubridate)
read_csv(nombres_premier[i], col_types = list(Date = col_date()))
read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%Y")))
read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- data.frame()
j <- 1
partidos <- data.frame()
partidos <- rbind(partidos, partidos_aux)
partidos_aux <- read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- rbind(partidos, partidos_aux)
partidos
partidos <- data.frame()
read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%y")))
read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%y"))) %>% summary()
partidos <- data.frame()
for(i in nombres_premier){
partidos_aux <- read_csv(nombres_premier[i], col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- rbind(partidos_aux)
}
nombres_premier
partidos
partidos <- data.frame()
for(i in nombres_premier){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- rbind(partidos_aux)
}
View(partidos)
names(partidos)
names(partidos_aux)
rm(list = ls())
library(tidyverse)
library(magrittr)
library(data.table)
library(lubridate)
library(stringr)
###### lectura bases de datos con resultados de partidos -----
setwd("Desktop/ITAM/Tesis/")
setwd("datos")
nombres_dir <- dir()
nombres_liga <- nombres_dir[nombres_dir %>% str_detect(pattern = "laliga_")]
partidos <- data.frame()
for(i in nombres_liga){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- rbind(partidos_aux)
}
View(partidos_aux)
partidos <- list()
for(i in nombres_liga){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")))
partidos <- rbind(partidos,partidos_aux)
}
partidos <- list()
append(partidos, partidos_aux)
append(partidos, list(partidos_aux))
partidos <- list()
for(i in nombres_liga){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")), n_max = 10)
partidos <- append(partidos, list(partidos_aux))
}
partidos
unlist(partidos)
rm(list = ls())
library(tidyverse)
library(magrittr)
library(data.table)
library(lubridate)
library(stringr)
###### lectura bases de datos con resultados de partidos -----
setwd("Desktop/ITAM/Tesis/")
setwd("datos")
nombres_dir <- dir()
nombres_premier <- nombres_dir[nombres_dir %>% str_detect(pattern = "premier_")]
partidos <- list()
for(i in nombres_premier){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")), n_max = 10)
partidos <- append(partidos, list(partidos_aux))
}
partidos
length(nombres_premier)
partidos[[i]]
partidos[[1]]
partidos[[2]]
names(partidos[[2]])
names(partidos[[1]])
names(partidos[[25]])
names(partidos[[2]])
var_premier <- names(partidos[[2]])
for(i in 1:length(nombres_premier)){
names(partidos[[i]]) <- var_premier
}
as.matrix(partidos[[25]])
length(partidos)
sapply(partidos,length)
partidos <- list()
for(i in nombres_premier){
partidos_aux <- read_csv(i, col_types = list(Date = col_date(format = "%d/%m/%y")), n_max = 1)
partidos <- append(partidos, list(partidos_aux))
}
max_var_premier <- max(sapply(partidos,length))
max_var_premier
which(max(sapply(partidos,length))==max_var_premier)
max(sapply(partidos,length))
max_var_premier <- max(sapply(partidos,length))
sapply(partidos,length)
sapply(partidos,length)
which(sapply(partidos,length)==max_var_premier)
names(partidos[[which(sapply(partidos,length)==max_var_premier)]])
